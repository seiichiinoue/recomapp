neovimでC++のファイルを編集しようとした際にlanguage server周りの設定が少し面倒だったのでメモ．
Language Server Protocol
Language Server Protocol(LSP)は，エディタや統合開発環境などの開発支援ツールと言語サーバ(Language Server)のコミュニケーションの手順を定めた仕様．
従来，開発支援ツールが各種のプログラミング支援機能（自動補完や定義ジャンプ）を提供するためにはプログラミング言語ごとに個別の機能を実装する必要があった．
LSPでは，言語サーバがクライアントに対して一般的なプログラミング支援機能を提供する．その結果，開発支援ツールは単一のLSPクライアント機能を実装するだけで自動的に言語サーバを提供する全てのプログラミング言語のプログラミング支援機能を提供することが可能になる．
clangd
今回はC++の言語サーバープロトコルを使用したいのでclangdを使用する．
clangdはLLVMのフロントであるclangをベースとしたサーバーで，LLVMプロジェクトが公式に開発している．
コンパイラなので，コンパイルエラーの検出はもちろんコード補完やフォーマット，定義ジャンプや参照元ジャンプ等に対応している．
clang-formatやRTagsといったclang系ツールも，LSPクライアントを導入してしまえばこれらの個別設定をしなくてよい．
clangdのインストール
macだとでclangdもインストールされるが，pathを通す必要がある．
llvm下にclangdが入っているらしいのでllvmの場所をまず探す．
しかし，どのパスをincludeしていいのかわからない．
インストールしたパッケージの実体はに．やにシンボリックリンクが貼られる．
これによると，はバージョンアップしても変わらないformulaのコンテンツへパスを通すシンボリックリンクらしい．(個人的な解釈)
よって下にある下ののパスをincludeしたら良さそう．
下にあるを探す．
上のパスをinclude（未検証だがどちらでもコマンドは使用できるようになると思われる）
pathが通ったのでneovim側の設定を行う．を編集．
以上で完了．パッケージ管理システム難しいので勉強しなければとなりました．
