zipf分布を用いた冪乗則に従う擬似データの生成
zipfの法則は，言語をはじめとしたさまざまな現象において成り立つことで有名です．
自然言語処理（言語学）においては，1文書中の単語の出現頻度について，番目に出現頻度が高い単語が，1番頻度が高い単語に対してに比例するといった経験則があげられます．
今回は，このzipfの法則を用いてlong tailな擬似データを生成することを考えます．
背景: Bag of Wordsのサンプリング
やりたいこととしては，ランダムな疑似データ（Bag of Words）を生成したいです（つまり語順は気にしません; どの単語が何回出現したかさえわかれば良いです）．
一番ナイーブな方法としては，一様分布を事前分布に持つ多項分布からランダムに単語を生成する方法が考えられます:
こんな感じです．しかし実際のコーパス（文書）はこんな分布になっていないはずなので，事前分布をdirichlet分布にしてみましょう:
ちょっと偏りが出ました．これは冪乗則に従っているんでしょうか？
語彙サイズを10→10,000にして，サンプル数も1,000→100,000と大きくして確認してみます:
log-logプロットをした結果は以下のように直線にはならず，冪分布にはなっていないことがわかります 1:
そこで，きちんと冪分布に従うような擬似データを生成するため，zipfを使ってみようというのが今回の話です．
zipf分布
zipf分布はを語彙サイズ，を頻度順位として，以下のように定義されます:
ここで，はzipf分布のスケールパラメータで，本来のzipの法則ではですが，を1よりも少しでも大きい数とすればを無限大にしても分母は収束するようになって，分布関数として定義できるようになります．
zipf分布を使ったサンプリング
それではzipf分布を使ってBoWを生成してみましょう:
結構冪分布っぽくなったんじゃないでしょうか？
先ほどと同様に語彙サイズを10→10,000にして，サンプル数も1,000→100,000と大きくして確認してみます:
log-logプロットでは直線になっていることが確認できます:
zipfパラメータの選択
zipf分布のスケールパラメータを変更することは，比例関係のスケール（log-logプロットの傾き）を変更することであり，これはzipf分布を一般化させた冪乗則の式を変形することで解釈できます．
冪乗則は次のようにとの間の比例関係が冪乗に従うというものであり，次のように表されます:
この両辺を対数変換すると:
log-logプロット上では傾きa,切片bの直線になり，zipf分布のスケールパラメータを変更することはすなわち傾きの操作に等しいです．
実際にを変更してみます．
の場合
このように，とすると，裾の厚い分布が得られます．
の場合
逆にとすると，裾が薄い分布になり，頻度の分布のカーブが急になるイメージです．
まとめ / あとがき
今回は，dirichlet分布からのランダムサンプリングでは簡単に実現できない冪乗則に従う擬似コーパスの作成方法について紹介しました．
個人的な話にはなりますが，研究で擬似データを生成するタスクを行っていたとき，dirichletを用いた擬似データではうまくfittingできないことがあった一方（実データを再現できていない可能性があるためかと思っています），zipfを使うと上手くいったので面白いなと思いました．
まだまだ冪乗則については知らないことが多いので自分も勉強をしていこうと思います．
dirichletのpriorをうまく設計すれば冪分布に従うのかもしれませんが，自分はやり方がわかりませんでした．詳しい方は教えてください．
[return]
