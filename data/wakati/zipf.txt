zipf 分布 を 用い た 冪 乗 則 に 従う 擬似 データ の 生成 
zipf の 法則 は ， 言語 を はじめ と し た さまざま な 現象 において 成り立つ こと で 有名 です ． 
自然 言語 処理 （ 言語 学 ） において は ， 1 文書 中 の 単語 の 出現 頻度 について ， 番目 に 出現 頻度 が 高い 単語 が ， 1 番 頻度 が 高い 単語 に対して に 比例 する といった 経験 則 が あげ られ ます ． 
今回 は ， この zipf の 法則 を 用い て long tail な 擬似 データ を 生成 する こと を 考え ます ． 
背景 : Bag of Words の サンプリング 
やり たい こと として は ， ランダム な 疑似 データ （ Bag of Words ） を 生成 し たい です （ つまり 語順 は 気 に し ませ ん ; どの 単語 が 何 回 出現 し た か さえ わかれ ば 良い です ） ． 
一番 ナイーブ な 方法 として は ， 一様 分布 を 事前 分布 に 持つ 多項 分布 から ランダム に 単語 を 生成 する 方法 が 考え られ ます : 
こんな 感じ です ． しかし 実際 の コーパス （ 文書 ） は こんな 分布 に なっ て い ない はず な ので ， 事前 分布 を dirichlet 分布 に し て み ましょ う : 
ちょっと 偏り が 出 まし た ． これ は 冪 乗 則 に 従っ て いる ん でしょ う か ？ 
語彙 サイズ を 10 → 10 , 000 に し て ， サンプル 数 も 1 , 000 → 100 , 000 と 大きく し て 確認 し て み ます : 
log - log プロット を し た 結果 は 以下 の よう に 直線 に は なら ず ， 冪 分布 に は なっ て い ない こと が わかり ます 1 : 
そこで ， きちんと 冪 分布 に 従う よう な 擬似 データ を 生成 する ため ， zipf を 使っ て みよ う という の が 今回 の 話 です ． 
zipf 分布 
zipf 分布 は を 語彙 サイズ ， を 頻度 順位 として ， 以下 の よう に 定義 さ れ ます : 
ここ で ， は zipf 分布 の スケール パラメータ で ， 本来 の zip の 法則 で は です が ， を 1 より も 少し でも 大きい 数 と すれ ば を 無限 大 に し て も 分母 は 収束 する よう に なっ て ， 分布 関数 として 定義 できる よう に なり ます ． 
zipf 分布 を 使っ た サンプリング 
それでは zipf 分布 を 使っ て BoW を 生成 し て み ましょ う : 
結構 冪 分布 っぽく なっ た ん じゃ ない でしょ う か ？ 
先 ほど と 同様 に 語彙 サイズ を 10 → 10 , 000 に し て ， サンプル 数 も 1 , 000 → 100 , 000 と 大きく し て 確認 し て み ます : 
log - log プロット で は 直線 に なっ て いる こと が 確認 でき ます : 
zipf パラメータ の 選択 
zipf 分布 の スケール パラメータ を 変更 する こと は ， 比例 関係 の スケール （ log - log プロット の 傾き ） を 変更 する こと で あり ， これ は zipf 分布 を 一般 化 さ せ た 冪 乗 則 の 式 を 変形 する こと で 解釈 でき ます ． 
冪 乗 則 は 次 の よう に と の 間 の 比例 関係 が 冪 乗 に 従う という もの で あり ， 次 の よう に 表さ れ ます : 
この 両辺 を 対数 変換 する と : 
log - log プロット 上 で は 傾き a , 切片 b の 直線 に なり ， zipf 分布 の スケール パラメータ を 変更 する こと は すなわち 傾き の 操作 に 等しい です ． 
実際 に を 変更 し て み ます ． 
の 場合 
この よう に ， と する と ， 裾 の 厚い 分布 が 得 られ ます ． 
の 場合 
逆 に と する と ， 裾 が 薄い 分布 に なり ， 頻度 の 分布 の カーブ が 急 に なる イメージ です ． 
まとめ / あとがき 
今回 は ， dirichlet 分布 から の ランダムサンプリング で は 簡単 に 実現 でき ない 冪 乗 則 に 従う 擬似 コーパス の 作成 方法 について 紹介 し まし た ． 
個人 的 な 話 に は なり ます が ， 研究 で 擬似 データ を 生成 する タスク を 行っ て い た とき ， dirichlet を 用い た 擬似 データ で は うまく fitting でき ない こと が あっ た 一方 （ 実 データ を 再現 でき て い ない 可能 性 が ある ため か と 思っ て い ます ） ， zipf を 使う と 上手く いっ た ので 面白い な と 思い まし た ． 
まだまだ 冪 乗 則 について は 知ら ない こと が 多い ので 自分 も 勉強 を し て いこ う と 思い ます ． 
dirichlet の prior を うまく 設計 すれ ば 冪 分布 に 従う の かも しれ ませ ん が ， 自分 は やり方 が わかり ませ ん でし た ． 詳しい 方 は 教え て ください ． 
[ return ] 
