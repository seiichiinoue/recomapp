最近 ， Rui Ueyama さん の コンパイラ 本 を 参考 に コンパイラ を 作成 し て いる の です が ， 推奨 環境 が Linux だっ た ので Docker で 仮想 環境 を 作成 し まし た ． 
やっ た こと 
Image の Pull 
Dockerfile の 作成 
vim の インストール と 設定 
Docker コマンド 
: イメージ の 基 の 指定 
: 実行 コマンド （ の 際 に 実行 さ れる ） 
: コンテナ 実行 時 の 実行 コマンド （ する 時 に 実行 さ れる ） 
: ポート の 解放 
: マウント ． コンテナ 外 の ディレクトリ を コンテナ 内 から 利用 できる よう に する 
: File / Directory の 追加 
: File / Directory の コピー 
: 作業 ディレクトリ の 指定 
Dockerfile の 作成 
適当 に 必要 な もの を install し て いく ． 
コンテナ の 作成 
作成 し た dockerfile から image を build する ． 
オプション は build 後 メッセージ 表示 用 ． 
“ ubuntu / workspace ” から コンテナ を 作成 
マウント 
local の ディレクトリ と 同期 さ せ たかっ た ので 対象 ディレクトリ を マウント ． 
マウント は コンテナ を 起動 する 際 に オプション を つける こと で 行う こと が できる 
今回 は ， を として マウント し たかっ た ので ， 以下 の よう な コマンド で コンテナ を 作成 ． （ は コンソール 出力 用 ） 
vim の 設定 
ローカル の を し て しまえ ば 早い 話 な ん だ が ， ローカル で は neovim を 使用 し て いる ので ， サーバ 上 で 環境 構築 する コスト が 高かっ た ． 
に 各種 設定 を 書い て いく ． とりあえず 必要 な もの だけ ． 
これ で 表示 系 は 困ら なく なっ た ， けど まだ 物足りない ので ， 暇 な 時 に 追記 し たい と 思い ます ． 
