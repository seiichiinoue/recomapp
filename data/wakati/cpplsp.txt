C ++ の Language Server 設定 メモ 
neovim で C ++ の ファイル を 編集 しよ う と し た 際 に language server 周り の 設定 が 少し 面倒 だっ た ので メモ ． 
Language Server Protocol 
Language Server Protocol ( LSP ) は ， エディタ や 統合 開発 環境 など の 開発 支援 ツール と 言語 サーバ ( Language Server ) の コミュニケーション の 手順 を 定め た 仕様 ． 
従来 ， 開発 支援 ツール が 各種 の プログラミング 支援 機能 （ 自動 補完 や 定義 ジャンプ ） を 提供 する ため に は プログラミング 言語 ごと に 個別 の 機能 を 実装 する 必要 が あっ た ． 
LSP で は ， 言語 サーバ が クライアント に対して 一般 的 な プログラミング 支援 機能 を 提供 する ． その 結果 ， 開発 支援 ツール は 単一 の LSP クライアント 機能 を 実装 する だけ で 自動的 に 言語 サーバ を 提供 する 全て の プログラミング 言語 の プログラミング 支援 機能 を 提供 する こと が 可能 に なる ． 
clangd 
今回 は C ++ の 言語 サーバー プロトコル を 使用 し たい ので clangd を 使用 する ． 
clangd は LLVM の フロント で ある clang を ベース と し た サーバー で ， LLVM プロジェクト が 公式 に 開発 し て いる ． 
コンパイラ な ので ， コンパイル エラー の 検出 は もちろん コード 補完 や フォーマット ， 定義 ジャンプ や 参照 元 ジャンプ 等 に 対応 し て いる ． 
clang - format や RTags といった clang 系 ツール も ， LSP クライアント を 導入 し て しまえ ば これら の 個別 設定 を し なく て よい ． 
clangd の インストール 
mac だ と で clangd も インストール さ れる が ， path を 通す 必要 が ある ． 
llvm 下 に clangd が 入っ て いる らしい ので llvm の 場所 を まず 探す ． 
しかし ， どの パス を include し て いい の か わから ない ． 
インストール し た パッケージ の 実体 は に ． や に シンボリックリンク が 貼ら れる ． 
これ に よる と ， は バージョンアップ し て も 変わら ない formula の コンテンツ へ パス を 通す シンボリックリンク らしい ． ( 個人 的 な 解釈 ) 
よって 下 に ある 下 の の パス を include し たら 良 さ そう ． 
下 に ある を 探す ． 
上 の パス を include （ 未 検証 だ が どちら でも コマンド は 使用 できる よう に なる と 思わ れる ） 
path が 通っ た ので neovim 側 の 設定 を 行う ． を 編集 ． 
以上 で 完了 ． パッケージ 管理 システム 難しい ので 勉強 し なけれ ば と なり まし た ． 
See Also 
